#############################################################################
# Makefile for building: headtracking
# Generated by qmake (2.01a) (Qt 4.8.2) on: Mon Aug 20 00:04:52 2012
# Project:  ../headtracking.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile ../headtracking.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I../../headtracking -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include -I/usr/include/opencv -I/usr/X11R6/include -I. -I. -I../../headtracking -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lGLU -lglut /usr/lib/libopencv_calib3d.so /usr/lib/libopencv_contrib.so /usr/lib/libopencv_core.so /usr/lib/libopencv_features2d.so /usr/lib/libopencv_flann.so /usr/lib/libopencv_gpu.so /usr/lib/libopencv_highgui.so /usr/lib/libopencv_imgproc.so /usr/lib/libopencv_legacy.so /usr/lib/libopencv_ml.so /usr/lib/libopencv_nonfree.so /usr/lib/libopencv_objdetect.so /usr/lib/libopencv_photo.so /usr/lib/libopencv_stitching.so /usr/lib/libopencv_ts.so /usr/lib/libopencv_video.so /usr/lib/libopencv_videostab.so -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../src/main.cpp \
		../src/mainwindow.cpp \
		../src/perspective.cpp \
		../src/calibration.cpp \
		../src/tracking.cpp \
		../src/calibrating.cpp \
		../src/camshift.cpp moc_mainwindow.cpp \
		moc_perspective.cpp \
		moc_calibration.cpp \
		moc_tracking.cpp \
		moc_calibrating.cpp \
		qrc_resources.cpp
OBJECTS       = main.o \
		mainwindow.o \
		perspective.o \
		calibration.o \
		tracking.o \
		calibrating.o \
		camshift.o \
		moc_mainwindow.o \
		moc_perspective.o \
		moc_calibration.o \
		moc_tracking.o \
		moc_calibrating.o \
		qrc_resources.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt/mkspecs/features/declarative_debug.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/opengl.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		../headtracking.pro
QMAKE_TARGET  = headtracking
DESTDIR       = 
TARGET        = headtracking

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_calibration.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: ../headtracking.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt/mkspecs/features/declarative_debug.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/opengl.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile ../headtracking.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_phonon.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/debug.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt/mkspecs/features/declarative_debug.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/opengl.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile ../headtracking.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/headtracking1.0.0 || $(MKDIR) .tmp/headtracking1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/headtracking1.0.0/ && $(COPY_FILE) --parents ../src/mainwindow.h ../src/perspective.h ../src/calibration.h ../src/tracking.h ../src/calibrating.h ../src/camshift.h .tmp/headtracking1.0.0/ && $(COPY_FILE) --parents ../res/resources.qrc .tmp/headtracking1.0.0/ && $(COPY_FILE) --parents ../src/main.cpp ../src/mainwindow.cpp ../src/perspective.cpp ../src/calibration.cpp ../src/tracking.cpp ../src/calibrating.cpp ../src/camshift.cpp .tmp/headtracking1.0.0/ && $(COPY_FILE) --parents ../ui/mainwindow.ui ../ui/calibration.ui .tmp/headtracking1.0.0/ && (cd `dirname .tmp/headtracking1.0.0` && $(TAR) headtracking1.0.0.tar headtracking1.0.0 && $(COMPRESS) headtracking1.0.0.tar) && $(MOVE) `dirname .tmp/headtracking1.0.0`/headtracking1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/headtracking1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_perspective.cpp moc_calibration.cpp moc_tracking.cpp moc_calibrating.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_perspective.cpp moc_calibration.cpp moc_tracking.cpp moc_calibrating.cpp
moc_mainwindow.cpp: ../src/calibration.h \
		ui_calibration.h \
		../src/mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../src/mainwindow.h -o moc_mainwindow.cpp

moc_perspective.cpp: ../src/tracking.h \
		../src/camshift.h \
		../src/perspective.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../src/perspective.h -o moc_perspective.cpp

moc_calibration.cpp: ui_calibration.h \
		../src/calibration.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../src/calibration.h -o moc_calibration.cpp

moc_tracking.cpp: ../src/camshift.h \
		../src/tracking.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../src/tracking.h -o moc_tracking.cpp

moc_calibrating.cpp: ../src/tracking.h \
		../src/camshift.h \
		../src/calibrating.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../src/calibrating.h -o moc_calibrating.cpp

compiler_rcc_make_all: qrc_resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_resources.cpp
qrc_resources.cpp: ../res/resources.qrc
	/usr/bin/rcc -name resources ../res/resources.qrc -o qrc_resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_calibration.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_calibration.h
ui_mainwindow.h: ../ui/mainwindow.ui \
		../src/perspective.h \
		../src/tracking.h
	/usr/bin/uic ../ui/mainwindow.ui -o ui_mainwindow.h

ui_calibration.h: ../ui/calibration.ui \
		../src/calibrating.h
	/usr/bin/uic ../ui/calibration.ui -o ui_calibration.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: ../src/main.cpp ../src/mainwindow.h \
		../src/calibration.h \
		ui_calibration.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o ../src/main.cpp

mainwindow.o: ../src/mainwindow.cpp ../src/mainwindow.h \
		../src/calibration.h \
		ui_calibration.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o ../src/mainwindow.cpp

perspective.o: ../src/perspective.cpp ../src/perspective.h \
		../src/tracking.h \
		../src/camshift.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o perspective.o ../src/perspective.cpp

calibration.o: ../src/calibration.cpp ../src/calibration.h \
		ui_calibration.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o calibration.o ../src/calibration.cpp

tracking.o: ../src/tracking.cpp ../src/tracking.h \
		../src/camshift.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tracking.o ../src/tracking.cpp

calibrating.o: ../src/calibrating.cpp ../src/calibrating.h \
		../src/tracking.h \
		../src/camshift.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o calibrating.o ../src/calibrating.cpp

camshift.o: ../src/camshift.cpp ../src/camshift.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o camshift.o ../src/camshift.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_perspective.o: moc_perspective.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_perspective.o moc_perspective.cpp

moc_calibration.o: moc_calibration.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_calibration.o moc_calibration.cpp

moc_tracking.o: moc_tracking.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tracking.o moc_tracking.cpp

moc_calibrating.o: moc_calibrating.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_calibrating.o moc_calibrating.cpp

qrc_resources.o: qrc_resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_resources.o qrc_resources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

